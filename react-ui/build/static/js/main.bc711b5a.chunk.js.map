{"version":3,"sources":["actions/index.js","components/YouTubeVideo/AllowPlayback.js","components/YouTubeVideo/YouTubeVideo.js","components/Login/Login.js","components/RiffControls/RiffDetail.js","components/RiffControls/RiffList.js","components/RiffControls/Record.js","components/RiffControls/EditRiff.js","components/RiffControls/RiffButton.js","components/RiffControls/Collaboration.js","components/RiffControls/EditControls.js","components/RiffControls/EditInterface.js","components/ViewInterface/AuthorSelector.js","components/ViewInterface/ViewInterface.js","components/LandingPage.js","App.js","serviceWorker.js","reducers/riffs-reducer.js","reducers/mode-reducer.js","reducers/googleUser-reducer.js","reducers/riffsPlaying-reducer.js","reducers/viewMutedUserIDs-reducer.js","reducers/name-reducer.js","reducers/videoID-reducer.js","reducers/index.js","index.js","images/undraw_movie_night_93wl.svg"],"names":["PLAY_MODE","setVideoID","videoID","googleUser","baseURL","process","REACT_APP_BASE_URL","dispatch","type","payload","getAuthResponse","axios","method","url","data","token","id_token","then","res","setPlayerMode","mode","rawLoadAxios","id","guser","responseType","AllowPlayback","props","componentDidMount","test","Audio","controls","src","play","console","log","setupAudioPlayers","catch","setState","allowed","window","audioPlayers","audioPlayerUse","audioPlayersCount","i","render","state","className","onClick","React","Component","connect","YouTubeVideo","YT","Player","loadVideo","tag","document","createElement","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","rifftubePlayer","destroy","player","videoId","height","width","playerVars","playsinline","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","checkForRiffsToLoad","t","riffs","forEach","riff","loading","time","loadRiff","curRiff","riffsPlaying","riffInterval","setInterval","getCurrentTime","index","duration","inUse","setRiffPlaying","audLock","setVolume","vol","ind","mutedIDs","user_id","getVolume","audioURL","URL","createObjectURL","audio","clearInterval","componentDidUpdate","prevProps","getPlayerState","playVideo","pauseVideo","Fragment","Object","keys","filter","map","key","mapDispatchToProps","playing","togglePlayerMode","all","viewMutedUserIDs","Login","socialId","scope","fetchBasicProfile","responseHandler","gus","setGoogleUser","buttonText","editRiff","deleteRiff","riffID","selected","toFixed","sort","e1","e2","Record","mediaRecorder","recordingState","navigator","mediaDevices","getUserMedia","stream","mr","MediaRecorder","ondataavailable","e","chunks","push","onstop","blob","Blob","saveTempAudio","err","this","Date","now","startTime","stop","start","EditRiff","durationField","createRef","htmlPayloadField","startTimeField","tempRiff","editIndex","defaultValue","ref","disabled","saveRiff","Number","current","value","cancelEdit","fd","FormData","append","video_id","tempId","headers","response","temp","RiffButton","createTempRiff","Collaboration","open","name","setRifferName","newName","n","prompt","EditInterface","loggedIn","isSignedIn","authCheck","DefaultComponent","extractVideoID","match","length","videoIDRef","to","onSubmit","preventDefault","href","target","rel","exact","path","bind","EditControls","AuthorSelector","names","includes","arr","reduce","ac","cur","containsReducer","el","toggleViewUserIdMuted","style","backgroundColor","renderNames","uID","ViewInterface","params","getViewRiffs","LandingPage","MovieImage","icon","color","size","App","component","Boolean","location","hostname","initialState","riffsReducer","action","getUTCMilliseconds","ret","body","start_time","isText","text","b","Array","modeReducer","googleUserReducer","riffsPlayingReducer","viewMutedUserIDsReducer","nameReducer","videoIDReducer","combineReducers","store","createStore","defaultReducer","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bc711b5a.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\n\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\n\nexport const EDIT_RIFF = 'EDIT_RIFF';\n\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\n\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\n\nexport const DELETE_RIFF = 'DELETE_RIFF';\n\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\n\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\n\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\n\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\n\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\n\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\n\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\n\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\n\n/******* Used in View Interface */\n\nexport const toggleViewUserIdMuted = uID => ({\n  type: TOGGLE_VIEW_USERID_MUTED,\n  id: uID\n});\n\n/****** Collaboration */\n\nexport const createPlaylist = (googleUser, name) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/create-playlist`,\n      data: { token: googleUser.getAuthResponse().id_token }\n    })\n      .then(res => {\n        dispatch({ type: CREATE_PLAYLIST_SUCCESS, payload: res.data });\n      })\n      .catch(err => {\n        dispatch({ type: CREATE_PLAYLIST_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const deletePlaylist = (googleUser, id) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/create-playlist`,\n      data: { token: googleUser.getAuthResponse().id_token }\n    })\n      .then(res => {\n        dispatch({ type: CREATE_PLAYLIST_SUCCESS, payload: res.data });\n      })\n      .catch(err => {\n        dispatch({ type: CREATE_PLAYLIST_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const getPlaylists = googleUser => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/get-playlists`,\n      data: { token: googleUser.getAuthResponse().id_token }\n    }).then(res => {\n      dispatch({ type: RECEIVE_COLLABORATION_ID, payload: res.data });\n    });\n  };\n};\n\nexport const addCollaborator = (googleUser, playlistID, collaboratorID) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/add-collaborator`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        collaborator_id: collaboratorID\n      }\n    }).then(res => {\n      dispatch({ type: RECEIVE_COLLABORATION_ID, payload: res.data });\n    });\n  };\n};\n\nexport const removeCollaborator = (googleUser, playlistID, collaboratorID) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/remove-collaborator`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        collaborator_id: collaboratorID\n      }\n    }).then(res => {\n      dispatch({ type: RECEIVE_COLLABORATION_ID, payload: res.data });\n    });\n  };\n};\n\nexport const startCollaboration = (googleUser, playlistID) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/start-collaboration`,\n      data: {\n        token: googleUser.getAuthResponse().id_token\n      }\n    }).then(res => {\n      dispatch({ type: RECEIVE_COLLABORATION_ID, payload: res.data });\n    });\n  };\n};\n\nexport const endCollaboration = (googleUser, playlistID, collaboratorID) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/end-collaboration`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        collaborator_id: collaboratorID\n      }\n    }).then(res => {\n      dispatch({ type: RECEIVE_COLLABORATION_ID, payload: res.data });\n    });\n  };\n};\n\n/******** Editing Interface */\n\nexport const setRifferName = (newName, googleUser) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `${baseURL}/set-name`,\n      data: { token: googleUser.getAuthResponse().id_token, newName }\n    }).then(res => {\n      dispatch({ type: RECEIVE_NAME_UPDATE, payload: res.data });\n    });\n  };\n};\n\nexport const setVideoID = (videoID, googleUser) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    //console.log( \"get url\", `${baseURL}/get-riffs` );\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID\n    });\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `${baseURL}/get-riffs`,\n        data: { token: googleUser.getAuthResponse().id_token, videoID }\n      }).then(res => {\n        dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n      });\n    }\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, googleUser) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `${baseURL}/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token\n      }\n    }).then(res => {\n      dispatch({ type: DELETE_RIFF, id: riffID });\n    });\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\nexport const setGoogleUser = (googleUser, videoID) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    //console.log( \"get url\", `${baseURL}/get-riffs` );\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser\n    });\n    axios({\n      method: 'post',\n      url: `${baseURL}/get-riffs`,\n      data: { token: googleUser.getAuthResponse().id_token, videoID }\n    }).then(res => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    });\n  };\n};\n\nexport const getViewRiffs = videoID => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    //console.log( \"get url\", `${baseURL}/get-riffs` );\n    /*dispatch({\n      type: null\n    });*/\n    axios({\n      method: 'post',\n      url: `${baseURL}/get-view-riffs`,\n      data: { videoID }\n    }).then(res => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    });\n  };\n};\n\nexport const setPlayerMode = mode => ({\n  type: SET_PLAYER_MODE,\n  payload: mode\n});\n\nexport const togglePlayerMode = mode => ({\n  type: TOGGLE_PLAYER_MODE\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration\n});\n\nexport const editRiff = (payload, id, gus) => {\n  return dispatch => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (id) rawLoadAxios(dispatch, id, gus);\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT\n});\n\nexport const saveRiff = (token, payload, riff) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  return dispatch => {\n    dispatch({ type: SAVE_RIFF, payload });\n\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append(\n      'duration',\n      riff.type === 'text' ? payload.duration : riff.duration\n    );\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId);\n\n    // this may be null, and that's ok\n    fd.append('id', riff.id);\n\n    axios({\n      method: 'post',\n      url: `${baseURL}/save-riff`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' }\n    })\n      .then(res => {\n        // res.data.data\n        dispatch({ type: SAVE_RIFF_SUCCESS, payload: res.data });\n      })\n      .catch(err => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const createTempRiff = (type, videoID) => ({\n  type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n  videoID\n});\n\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index\n});\n\nexport const loadRiff = (id, guser) => {\n  return dispatch => {\n    rawLoadAxios(dispatch, id, guser);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id, guser) => {\n  var baseURL = process.env.REACT_APP_BASE_URL\n    ? process.env.REACT_APP_BASE_URL\n    : '';\n  axios({\n    method: 'post',\n    url: `${baseURL}/load-riff`,\n    responseType: 'arraybuffer',\n    data: { token: guser ? guser.getAuthResponse().id_token : null, id } // modified to make guser optional\n  }).then(res => {\n    dispatch({ type: RIFF_LOADED, payload: res.data, id });\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass AllowPlayback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { allowed: false };\n  }\n\n  componentDidMount = () => {\n    var test = new Audio();\n    test.controls = false;\n    test.src = '/dingdong.wav';\n    test.play()\n      .then( () => { console.log( \"playback ok\" ); this.setupAudioPlayers(); } )\n      .catch( () => { console.log( \"playback not allowed\" ); } );\n  };\n\n  setupAudioPlayers = () =>\n  {\n    this.setState( { allowed: true } );\n    window.audioPlayers = [];\n    window.audioPlayerUse = [];\n    window.audioPlayersCount = 5;\n    for ( let i = 0; i < 5; i++ )\n    {\n      window.audioPlayers[i] = new Audio(); // should be identical behavior to: document.createElement('audio');\n      window.audioPlayers[i].controls = false;\n      window.audioPlayerUse[i] = false;\n    }\n  }\n\n  render = () => {\n    debugger;\n    if ( ! this.state ) return null;\n\n    return !this.state.allowed\n      ?\n        <div className=\"audio-capture\" onClick={ () => { this.setupAudioPlayers(); } }>Click to allow</div>\n      :\n        null;\n  };\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllowPlayback);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setPlayerMode,\n  setRiffPlaying,\n  loadRiff,\n  togglePlayerMode,\n  EDIT_MODE,\n  EDIT_NEW_MODE,\n  PLAY_MODE,\n  PAUSE_MODE\n} from '../../actions/index.js';\nimport AllowPlayback from './AllowPlayback.js';\n\n// based on https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\n\nclass YouTubeVideo extends React.Component {\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT || !window.YT.Player) {\n      // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } // If script is already there, load the video directly\n    else {\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    if (window.rifftubePlayer) window.rifftubePlayer.destroy();\n\n    this.player = new window.YT.Player('rifftube-player', {\n      videoId: id,\n      height: 390,\n      width: 640,\n      playerVars: {\n        playsinline: 1 // allows it to play inline on iOS\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    });\n\n    window.rifftubePlayer = this.player; // store global reference (used to get current playback time when needed)\n  };\n\n  onPlayerReady = event => {\n    //event.target.playVideo();\n  };\n\n  checkForRiffsToLoad = t => {\n    this.props.riffs.forEach(riff => {\n      if (\n        riff.type === 'audio' &&\n        !riff.payload &&\n        !riff.loading &&\n        riff.time >= t &&\n        riff.time < t + 10\n      )\n        this.props.loadRiff(riff.id, this.props.googleUser);\n    });\n  };\n\n  onPlayerStateChange = ({ data }) => {\n    /*\n        -1 (unstarted)\n        0 (ended)\n        1 (playing)\n        2 (paused)\n        3 (buffering)\n        5 (video cued).\n        */\n\n    // the following conditional leaves out some 'else's that should never occur\n\n    if (data === 1) {\n      // playing\n\n      // the following code is\n      // needed I think... for pausing during a riff.\n      // so that (subsiquent) 'zombie' riffs can be killed,\n      // I think.\n      this.curRiff = this.props.riffsPlaying;\n\n      /*******************************************************/\n      // this timer is responsible for showing and hiding riffs\n      this.riffInterval = setInterval(() => {\n        //console.log( \"interval\", this.curRiff, this.props.riffsPlaying );\n\n        let t = window.rifftubePlayer.getCurrentTime();\n\n        this.checkForRiffsToLoad(t);\n\n        // first stop any zombie riffs\n        this.props.riffs.forEach((riff, index) => {\n          if (\n            this.curRiff[index] &&\n            (t < riff.time || t > riff.time + riff.duration)\n          ) {\n            if ( this.curRiff[index].inUse ) \n              this.curRiff[index].inUse = false;\n\n            // by setting this to false, text riffs will be hidden\n            this.props.setRiffPlaying(index, false);\n            this.curRiff[index] = null;\n\n            if (riff.type === 'audio')\n              // make sure all audio clips have stopped\n              this.audLock--;\n              if ( !this.audLock )\n              {\n                window.rifftubePlayer.setVolume(this.vol ? this.vol : 100); // hopefully unnecessary volume failsafe\n                delete this.vol;\n              }\n          }\n        });\n\n        var riffMuted = ind => this.props.mutedIDs[ this.props.riffs[ind].user_id ];\n\n        // next start any that should be playing\n        this.props.riffs.forEach((riff, index) => {\n          // the riff will start playing within half a second, or will be skipped\n          if ( !riffMuted(index) && !this.curRiff[index] && t > riff.time && t < riff.time + 0.5 ) {\n\n            this.props.setRiffPlaying(index, true);\n            this.curRiff[index] = true; // used for text only; overwritten for audio\n\n            if (riff.type === 'audio') {\n              if ( !this.vol )\n              {\n                this.vol = window.rifftubePlayer.getVolume();\n                window.rifftubePlayer.setVolume(this.vol * 0.5);\n              }\n\n              // keeps track of how many audio tracks need to end before volume should be restored\n              if ( !this.audLock )\n                this.audLock = 1;\n              else\n                this.audLock++;\n\n              if (!riff.payload) { console.log( \"empty payload error\" ); return; } // DEBUG - SHOULD BE REMOVED\n              var audioURL = URL.createObjectURL(riff.payload);\n              //debugger;\n              //console.log( \"play riff!\" );\n              for ( let i = 0; i < window.audioPlayersCount; i++ )\n              {\n                let audio = window.audioPlayers[i];\n                if ( audio.inUse ) continue;\n                audio.src = audioURL;\n                audio.play();\n                audio.inUse = true;\n\n                this.curRiff[index] = audio;\n                break;\n              }\n            }\n          }\n        });\n      }, 100); // 100/1000 = 1/10 s\n\n      if (this.props.mode !== PLAY_MODE) {\n        // change mode state\n        this.props.setPlayerMode(PLAY_MODE);\n      }\n    } // not playing\n    else {\n      // stop riff-check interval when not playing\n      clearInterval(this.riffInterval);\n\n      if (this.props.mode === PLAY_MODE) {\n        // change mode state\n        this.props.setPlayerMode(PAUSE_MODE);\n      }\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    //console.log( \"youtube vid component upate\" );\n\n    this.checkForRiffsToLoad(0); // check if any riffs at < 10s in need loading\n\n    if (this.props.id !== prevProps.id) this.loadVideo();\n\n    if (this.props.mode !== prevProps.mode) {\n      if (\n        (this.props.mode === EDIT_MODE ||\n          this.props.mode === EDIT_NEW_MODE ||\n          this.props.mode === PAUSE_MODE) &&\n        this.player.getPlayerState() === 1\n      ) {\n        this.player.pauseVideo();\n      } else if (\n        this.props.mode === PLAY_MODE &&\n        this.player.getPlayerState() !== 1\n      ) {\n        this.player.playVideo();\n      }\n    }\n  };\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <div className=\"rifftube-container\">\n          <AllowPlayback />\n          <div className=\"rifftube-overlay\">\n            <div className=\"rifftube-riffs-container\">\n              {Object.keys(this.props.riffsPlaying)\n                .filter(i => this.props.riffsPlaying[i] && this.props.riffs[i].type === 'text')\n                .map(key => (\n                  <div key={this.props.riffs[key].id} className=\"rifftube-textriff\">\n                    {this.props.riffs[key].payload}\n                  </div>\n                ))}\n            </div>\n          </div>\n          <div id=\"rifftube-player\" />\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  mode: state.mode,\n  riffs: state.riffs.all,\n  riffsPlaying: state.riffsPlaying,\n  googleUser: state.googleUser,\n  mutedIDs: state.viewMutedUserIDs\n});\n\nconst mapDispatchToProps = {\n  setPlayerMode,\n  setRiffPlaying,\n  togglePlayerMode,\n  loadRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YouTubeVideo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login-component';\nimport { setGoogleUser } from '../../actions/index.js';\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <GoogleLogin\n        socialId=\"941154439836-s6iglcrdckcj6od74kssqsom58j96hd8.apps.googleusercontent.com\"\n        className=\"google-login\"\n        scope=\"profile email\"\n        fetchBasicProfile={false}\n        responseHandler={gus => {\n          this.props.setGoogleUser(gus, this.props.videoID);\n        }}\n        buttonText=\"Login With Google\"\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  videoID: state.videoID\n});\n\nconst mapDispatchToProps = {\n  setGoogleUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { editRiff, deleteRiff } from '../../actions/index.js';\n\n/* this component is where a user can edit their riff */\nfunction RiffDetail(props) {\n  return (\n    <div\n      className={`riff-detail${props.selected ? ' riff-detail-selected' : ''}`}\n    >\n      <div>\n        <ul className=\"riff-detail-list\">\n          <li>\n            start time: {props.time.toFixed ? props.time.toFixed(2) : null}\n          </li>\n          <li>duration: {props.duration.toFixed(2)}</li>\n          <li>type: {props.type}</li>\n          <li>No. {props.id}</li>\n        </ul>\n        <button\n          onClick={() =>\n            props.editRiff(\n              props.index,\n              props.type === 'audio' && !props.payload ? props.id : null,\n              props.googleUser\n            )\n          }\n        >\n          Edit\n        </button>\n        <button onClick={() => props.deleteRiff(props.id, props.googleUser)}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  editRiff,\n  deleteRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RiffDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RiffDetail from './RiffDetail.js';\n\n/* this component maps over all of the user's riffs for this video */\nfunction RiffList(props) {\n  console.log('display', props.riffs);\n  return (\n    <div className=\"list-of-riffs\">\n      {props.riffs\n        ? props.riffs.sort( (e1,e2) => (e1.time - e2.time) ).map((riff, index) => (\n            <RiffDetail\n              key={riff.id}\n              {...riff}\n              index={index}\n              selected={props.riffsPlaying[index] === true}\n            />\n          ))\n        : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  riffs: state.riffs.all,\n  riffsPlaying: state.riffsPlaying\n});\n\nexport default connect(mapStateToProps, null)(RiffList);\n","import React from 'react';\n\nclass Record extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mediaRecorder: null,\n      recordingState: false\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(stream => {\n          const mr = new MediaRecorder(stream);\n\n          mr.ondataavailable = e => {\n            this.chunks.push(e.data);\n          };\n\n          mr.onstop = e => {\n            var blob = new Blob(this.chunks, { type: 'audio/webm' }); // was 'audio/webm;codecs=opus'\n            this.props.saveTempAudio(blob, this.duration);\n          };\n\n          this.setState({ mediaRecorder: mr });\n        })\n        .catch(err => console.log('Error', err));\n    }\n  }\n\n  render() {\n    var ret; // var for the value to be returned\n\n    if (navigator.mediaDevices && this.state.mediaRecorder) {\n      if (!this.state.recordingState) {\n        ret = (\n          <button\n            id=\"recordBtn\"\n            onClick={() => {\n              this.setState({ recordingState: true });\n              this.chunks = [];\n              this.startTime = Date.now();\n              this.state.mediaRecorder.start();\n            }}\n          >\n            record\n          </button>\n        );\n      } else {\n        ret = (\n          <button\n            id=\"stopBtn\"\n            onClick={() => {\n              this.setState({ recordingState: false });\n              this.duration = (Date.now() - this.startTime) / 1000;\n              this.state.mediaRecorder.stop();\n            }}\n          >\n            stop\n          </button>\n        );\n      }\n    } else if (navigator.mediaDevices && !this.state.mediaRecorder)\n      ret = <span>mediaRecorder failed to initialize</span>;\n    else ret = <span>navigator.mediaDevices not supported. sorry.</span>;\n\n    return ret;\n  }\n}\n\nexport default Record;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Record from './Record.js';\nimport {\n  saveRiff,\n  setPlayerMode,\n  saveTempAudio,\n  cancelEdit,\n  EDIT_MODE\n} from '../../actions/index.js';\n\nclass EditRiff extends React.Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.durationField = React.createRef();\n    this.htmlPayloadField = React.createRef();\n    this.startTimeField = React.createRef();\n  }\n\n  render() {\n    console.log('ed rif red');\n    return (\n      <div className=\"edit-riff\">\n        <div className=\"edit-riff-inner\">\n          {this.props.tempRiff.type === 'audio' ? (\n            <React.Fragment>\n              {this.props.mode === EDIT_MODE && this.props.editIndex && !this.props.tempRiff.payload ? (\n                <span>Loading...</span>\n              ) : null}\n              <Record saveTempAudio={this.props.saveTempAudio} />\n              {this.props.tempRiff.payload ? (\n                <button\n                  onClick={() => {\n                    var audio = document.createElement('audio');\n                    audio.controls = false;\n                    var audioURL = URL.createObjectURL(\n                      this.props.tempRiff.payload\n                    );\n                    audio.src = audioURL;\n                    audio.play();\n                  }}\n                >\n                  Play\n                </button>\n              ) : null}\n              <br />\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                disabled={!this.props.tempRiff.payload}\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.props.tempRiff.payload,\n                      time: Number(this.startTimeField.current.value)\n                    },\n                    this.props.tempRiff\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <div>HTML payload:</div>\n              <textarea id=\"riff-edit-field\" ref={this.htmlPayloadField} defaultValue={this.props.tempRiff.payload} />\n\n              <div>\n                Duration:{' '}\n                <input\n                  id=\"riff-duration-field\"\n                  defaultValue={this.props.tempRiff.duration || 2}\n                  ref={this.durationField}\n                />\n              </div>\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.htmlPayloadField.current.value,\n                      duration: Number(\n                        this.durationField.current.value\n                      ),\n                      time: Number(this.startTimeField.current.value)\n                    },\n                    this.props.tempRiff\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          )}\n\n          <button\n            onClick={() => {\n              this.props.cancelEdit();\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  mode: state.mode,\n  tempRiff: state.riffs.temp,\n  editIndex: state.riffs.editIndex,\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  setPlayerMode,\n  saveRiff,\n  saveTempAudio,\n  cancelEdit\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRiff);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createTempRiff } from '../../actions/index.js';\n\nclass RiffButton extends React.Component {\n  render() {\n    return (\n      <button onClick={() => { this.props.createTempRiff(this.props.type, this.props.videoID); }}>\n        {this.props.type}\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  videoID: state.videoID\n});\n\nconst mapDispatchToProps = {\n  createTempRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RiffButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Collaboration extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { open: false };\n    }\n    \n    render()\n    {\n        return (\n            <React.Fragment>\n                <button onClick={ () => this.setState( { open: ! this.state.open } ) }>\n                    Collaboration Panel\n                </button>\n\n                {\n                    this.state.open\n                    ?\n                        <div>\n                            open!\n                        </div>\n                    :\n                        null\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    videoID: state.videoID,\n    googleUser: state.googleUser,\n    name: state.name\n  });\n  \n  const mapDispatchToProps = {\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Collaboration);\n  ","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport RiffList from './RiffList.js';\nimport EditRiff from './EditRiff.js';\nimport RiffButton from './RiffButton.js';\nimport Collaboration from './Collaboration';\nimport { setRifferName } from '../../actions'; // this and below are the same file\nimport { EDIT_MODE, EDIT_NEW_MODE } from '../../actions/index.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  return (\n    <div className=\"control-panel\">\n      {\n        // make this into a component?:\n        props.name\n        ?\n          <div>\n            Riffer Name:&nbsp;\n            {\n              props.name\n            }\n            <button\n              type=\"button\"\n              onClick={ () => {\n                var n = prompt(\"Enter name\", props.name);\n                if ( n )\n                  props.setRifferName( n, props.googleUser );\n              } }\n            >\n              Update Name\n            </button>\n          </div>\n        :\n          null\n      }\n\n      { /* to add back later <Collaboration /> */ }\n\n      <div>\n        <h2 className=\"add-riff-title\">Add New Riff</h2>\n        <RiffButton type=\"audio\" />\n        <RiffButton type=\"text\" />\n\n        {props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? (\n          <EditRiff />\n        ) : null}\n      </div>\n      <h2 className=\"riff-list-title\">Control Panel</h2>\n      <RiffList />\n    </div>\n  );\n}\n\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  name: state.name,\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  setRifferName\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport YouTubeVideo from '../YouTubeVideo/YouTubeVideo';\nimport Login from '../Login/Login';\nimport EditControls from './EditControls';\nimport { setVideoID } from '../../actions';\nimport { NavLink } from 'react-router-dom';\n\nclass EditInterface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoIDRef = React.createRef();\n  }\n\n  loggedIn = () => {\n    if (this.props.googleUser) return this.props.googleUser.isSignedIn();\n\n    return false;\n  };\n\n  authCheck = (Component, DefaultComponent) => {\n    return this.loggedIn() ? <Component /> : <DefaultComponent />;\n  };\n  /* extracts the youtube id from a url. got help from: https://ctrlq.org/code/19797-regex-youtube-id */\n  extractVideoID = url => {\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n    var match = url.match(regExp);\n    if (match && match[7].length === 11) {\n      return match[7];\n    } else {\n      return url; // if extraction fails, fallback on assuming they gave an ID\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"youtube-section\">\n          <div className=\"top-section\">\n            <nav>\n              <NavLink to=\"/\">Home</NavLink>\n              <NavLink to=\"/riff\">Start Riffing</NavLink>\n            </nav>\n            <div className=\"title-and-url\">\n              <h1>RiffTube</h1>\n            </div>\n          </div>\n          <form\n            onSubmit={e => {\n              this.props.setVideoID(\n                this.extractVideoID(this.videoIDRef.current.value),\n                this.props.googleUser\n              );\n              e.preventDefault();\n            }}\n          >\n            <label>YouTube URL/ID:&nbsp;&nbsp;</label>\n            <input\n              type=\"text\"\n              defaultValue={this.props.videoID}\n              ref={this.videoIDRef}\n            />\n            <button type=\"submit\">Change Video</button>\n          </form>\n\n          <YouTubeVideo id={this.props.videoID} />\n\n          <div>\n            <a\n              href={'/view/' + this.props.videoID}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View video\n            </a>\n          </div>\n        </div>\n        <Route\n          exact\n          path=\"/riff\"\n          render={this.authCheck.bind(this, EditControls, Login)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  videoID: state.videoID,\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  setVideoID\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditInterface);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleViewUserIdMuted } from '../../actions';\n\nclass AuthorSelector extends React.Component\n{\n    renderNames()\n    {\n        var names = [];\n        const containsReducer = id => (ac, cur) => cur.id === id ? ac || true : ac || false;\n        const includes = ( arr, id ) => arr.reduce( containsReducer( id ), false );\n\n        this.props.riffs.forEach( el =>\n            {\n                console.log( \"name\", el.name, includes( names, el.user_id ) );\n                if ( ! includes( names, el.user_id ) )\n                    names.push( { name: el.name, id: el.user_id } );\n            });\n        return names.map( el => (\n            <div key={el.id} onClick={ () => this.props.toggleViewUserIdMuted( el.id ) } style={ { backgroundColor: this.props.mutedIDs[el.id] ? 'gray' : 'blue' } }>\n                { el.name }\n            </div>\n        ));\n    }\n    \n    render()\n    {\n        return (\n            <div>\n                {\n                    this.renderNames()\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    riffs: state.riffs.all,\n    mutedIDs: state.viewMutedUserIDs\n  });\n  \n  const mapDispatchToProps = {\n    toggleViewUserIdMuted\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorSelector);","import React from 'react';\nimport { connect } from 'react-redux';\nimport YouTubeVideo from '../YouTubeVideo/YouTubeVideo';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\n\nclass ViewInterface extends React.Component {\n    componentDidMount = () =>\n    {\n        this.props.setVideoID( this.props.match.params.videoID );\n\n        this.props.getViewRiffs( this.props.match.params.videoID );\n    };\n\n    render = () =>\n    {\n        return (\n            <div>\n                <h1>View {this.props.match.params.videoID}</h1>\n                <YouTubeVideo id={this.props.match.params.videoID} />\n                <AuthorSelector />\n            </div>\n        );\n    }\n}\n\n/*const mapStateToProps = state => ({\n  });*/\n  \n  const mapDispatchToProps = {\n    setVideoID,\n    getViewRiffs\n  };\n\nexport default connect(null, mapDispatchToProps)(ViewInterface);","import React from 'react';\nimport MovieImage from '../images/undraw_movie_night_93wl.svg';\nimport Icon from '@material-ui/core/Icon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MaterialIcon, { colorPalette } from 'material-icons-react';\nimport { NavLink } from 'react-router-dom';\n\nfunction LandingPage() {\n  return (\n    <div className=\"landing-page\">\n      <nav>\n        <NavLink to=\"/\">Home</NavLink>\n        <NavLink to=\"/riff\">Start Riffing</NavLink>\n      </nav>\n      <section className=\"top-part\">\n        <div className=\"heading\">\n          <span className=\"heading-primary-main\">RiffTube</span>\n          <span className=\"heading-primary-sub\">Make Your Voice Heard</span>\n          <NavLink to=\"/riff\" className=\"get-started-btn btn\">\n            Get Started &#8594;\n          </NavLink>\n        </div>\n      </section>\n      <section className=\"middle-part\">\n        <img className=\"movie-image\" src={MovieImage}></img>\n        <div className=\"middle-text\">\n          <h3>Easy Audio Commentary</h3>\n          <p>\n            Add commentary to YouTube videos without bulky, expensive software.\n          </p>\n        </div>\n        <div className=\"features\">\n          <div className=\"feature feature-one\">\n            <MaterialIcon icon=\"mic\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Add your voice to any video on Youtube.</p>\n          </div>\n          <div className=\"feature feature-two\">\n            <MaterialIcon icon=\"edit\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Edit your recordings until they're just right</p>\n          </div>\n          <div className=\"feature feature-three\">\n            <MaterialIcon icon=\"people\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Add your friends' voices to the recording</p>\n          </div>\n          <div className=\"feature feature-three\">\n            <MaterialIcon icon=\"share\" color=\"#a41320\" size=\"medium\" />\n\n            <p>\n              Simply copy paste a link to share your annotated youtube video\n              with anybody\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport EditInterface from './components/RiffControls/EditInterface';\nimport ViewInterface from './components/ViewInterface/ViewInterface';\nimport LandingPage from './components/LandingPage.js';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"main-section\">\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/riff\" component={EditInterface} />\n            <Route path=\"/view/:videoID\" component={ViewInterface} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SET_VIDEO_ID,\n  DELETE_RIFF,\n  SAVE_RIFF,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  SAVE_TEMP_AUDIO,\n  CANCEL_EDIT,\n  EDIT_RIFF,\n  LOAD_RIFF,\n  RIFF_LOADED,\n  RECEIVE_RIFF_LIST,\n  SAVE_RIFF_SUCCESS\n} from '../actions/index.js';\n\nlet initialState = {\n  all: [],\n  temp: null,\n  editIndex: null\n};\n\nconst riffsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return initialState;\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          type: action.type === CREATE_TEMP_AUDIO_RIFF ? 'audio' : 'text',\n          // @ts-ignore\n          // rifftubePlayer isn't normally on the window object so this throws an error but it works.\n          time: window.rifftubePlayer.getCurrentTime(),\n          video_id: action.videoID,\n          tempId: new Date().getUTCMilliseconds() // used to get perm id from server\n        },\n        editIndex: null\n      };\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: { ...state.all[action.payload] }, // copy specified riff to tempRiff\n        editIndex: action.payload\n      };\n    case DELETE_RIFF: {\n      let ret = { ...state };\n\n      ret.all = ret.all.filter( el => el.id !== action.id );\n\n      // silly change\n\n      /*let index = ret.all.findIndex(el => el.id === action.id);\n\n      console.log( \"delete riff reducer\", index );\n\n      console.log( ret );\n\n      ret.all.splice(index, 1);*/\n\n      return ret;\n    }\n    case SAVE_TEMP_AUDIO:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          duration: action.duration,\n          payload: action.payload\n        }\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null\n      };\n    case RECEIVE_RIFF_LIST:\n      return {\n        ...state,\n        all: [\n          ...state.all,\n          ...action.payload.body.map(el => ({\n            ...el,\n            time: el.start_time,\n            payload: el.isText ? el.text : null,\n            type: el.isText ? 'text' : 'audio'\n          }))\n        ]\n      };\n    case SAVE_RIFF_SUCCESS:\n      if (action.payload.type === 'add') {\n        let riffs = [...state.all];\n        riffs.forEach((el, ind, arr) => {\n          if (el.tempId === action.payload.tempId)\n            arr[ind] = { ...el, id: action.payload.id };\n          //el.id = action.payload.id;\n        });\n        let ret = { ...state, all: riffs };\n        return ret;\n      } else return state;\n    case SAVE_RIFF: {\n      let riff = { ...state.temp, ...action.payload };\n      let riffs;\n\n      // adding a new riff:\n      if (state.editIndex === null) riffs = [...state.all, riff];\n      // EDIT_MODE (existing riff):\n      else {\n        riffs = [...state.all];\n        riffs[state.editIndex] = riff;\n      }\n\n      return {\n        //        ...state, // not needed because the state is fully specified\n        all: riffs,\n        temp: null,\n        editIndex: null\n      };\n    }\n    case LOAD_RIFF:\n      let ret = { ...state }; // will this work?\n      ret.all[action.payload].loading = true;\n      return ret;\n    case RIFF_LOADED: {\n      const b = new Blob(new Array(action.payload), { type: 'audio/webm' });\n      let riffs = [...state.all];\n      riffs.forEach(el => {\n        if (el.id === action.id) {\n          el.payload = b;\n          el.loading = false;\n        }\n      });\n      let ret = { ...state, all: riffs };\n\n      // if this is being edited currently, tempRiff needs to be updated as well\n      // editIndex != null simply means that something is being edited\n      if (state.editIndex !== null && state.temp.id === action.id)\n        ret.temp = { ...ret.temp, payload: b };\n\n      return ret;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default riffsReducer;\n","import {\n  SET_VIDEO_ID,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  EDIT_RIFF,\n  EDIT_MODE,\n  CANCEL_EDIT,\n  SAVE_RIFF,\n  SET_PLAYER_MODE,\n  PLAY_MODE,\n  PAUSE_MODE,\n  TOGGLE_PLAYER_MODE\n} from '../actions/index.js';\n\nconst modeReducer = (state = PAUSE_MODE, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return PAUSE_MODE;\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n    case EDIT_RIFF:\n      return EDIT_MODE;\n    case SET_PLAYER_MODE:\n      return action.payload;\n    case CANCEL_EDIT:\n      return PAUSE_MODE;\n    case TOGGLE_PLAYER_MODE: // not needed at the moment\n      return state.mode === PLAY_MODE ? PAUSE_MODE : PLAY_MODE;\n    case SAVE_RIFF:\n      return PLAY_MODE; // should be an option\n    default:\n      return state;\n  }\n};\n\nexport default modeReducer;","import {\n  GOOGLE_USER_SIGNIN\n} from '../actions/index.js';\n\nconst googleUserReducer = (state = null, action) => {\n  switch (action.type) {\n    case GOOGLE_USER_SIGNIN:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default googleUserReducer;","import {\n  SET_VIDEO_ID,\n  SET_RIFF_NOT_PLAYING,\n  SET_RIFF_PLAYING\n} from '../actions/index.js';\n\nconst riffsPlayingReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return {\n          ...state,\n          [action.payload]: action.type === SET_RIFF_PLAYING ? true : false\n        };\n    default:\n      return state;\n  }\n}\n\nexport default riffsPlayingReducer;","import {\n  SET_VIDEO_ID,\n  TOGGLE_VIEW_USERID_MUTED\n} from '../actions/index.js';\n\nconst viewMutedUserIDsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case TOGGLE_VIEW_USERID_MUTED:\n      return {\n            ...state,\n            [action.id]: !state[action.id]\n        };\n    default:\n      return state;\n  }\n};\n\nexport default viewMutedUserIDsReducer;","import {\n  RECEIVE_RIFF_LIST,\n  RECEIVE_NAME_UPDATE\n} from '../actions/index.js';\n\nconst nameReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n      return action.payload.name || \"\"; // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;","import {\n  SET_VIDEO_ID\n} from '../actions/index.js';\n\nconst videoIDReducer = (state = \"Oqaz7U37hrE\", action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default videoIDReducer;","import { combineReducers } from 'redux';\n\nimport riffsReducer from './riffs-reducer';\nimport modeReducer from './mode-reducer';\nimport googleUserReducer from './googleUser-reducer';\nimport riffsPlayingReducer from './riffsPlaying-reducer';\nimport viewMutedUserIDsReducer from './viewMutedUserIDs-reducer';\nimport nameReducer from './name-reducer';\nimport videoIDReducer from './videoID-reducer';\n\nexport default combineReducers({\n  riffs: riffsReducer,\n  mode: modeReducer,\n  googleUser: googleUserReducer,\n  riffsPlaying: riffsPlayingReducer,\n  viewMutedUserIDs: viewMutedUserIDsReducer,\n  name: nameReducer,\n  videoID: videoIDReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport defaultReducer from './reducers';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(defaultReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/undraw_movie_night_93wl.bd90a236.svg\";"],"sourceRoot":""}